/// url = 'http://hl7.org/fhir/StructureMap/PaymentReconciliation5to4'
/// name = 'PaymentReconciliation5to4'
/// title = 'FML Conversion for PaymentReconciliation: R5 to R4'

conceptmap "NoteType" {
  prefix s = "http://hl7.org/fhir/note-type"
  prefix t = "http://hl7.org/fhir/4.0/note-type"

  s:"display" - t:"display"
  s:"print" - t:"print"
  s:"printoper" - t:"printoper"
}

conceptmap "PaymentOutcome" {
  prefix s = "http://hl7.org/fhir/payment-outcome"
  prefix t = "http://hl7.org/fhir/4.0/payment-outcome"

  s:"queued" - t:"queued"
  s:"complete" - t:"complete"
  s:"error" - t:"error"
  s:"partial" - t:"partial"
}

conceptmap "PaymentReconciliationStatus" {
  prefix s = "http://hl7.org/fhir/fm-status"
  prefix t = "http://hl7.org/fhir/4.0/fm-status"

  s:"active" - t:"active"
  s:"cancelled" - t:"cancelled"
  s:"draft" - t:"draft"
  s:"entered-in-error" - t:"entered-in-error"
}

uses "http://hl7.org/fhir/StructureDefinition/PaymentReconciliation" alias PaymentReconciliationR5 as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/PaymentReconciliation" alias PaymentReconciliationR4 as target

imports "http://hl7.org/fhir/StructureMap/*5to4"

group PaymentReconciliation(source src : PaymentReconciliationR5, target tgt : PaymentReconciliationR4) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.type -> tgt.type;
  src.status as v -> tgt.status = translate(v, '#PaymentReconciliationStatus', 'code');
  src.kind -> tgt.kind;
  src.period -> tgt.period;
  src.created -> tgt.created;
  src.enterer -> tgt.enterer;
  src.issuerType -> tgt.issuerType;
  src.paymentIssuer -> tgt.paymentIssuer;
  src.request -> tgt.request;
  src.requestor -> tgt.requestor;
  src.outcome as v -> tgt.outcome = translate(v, '#PaymentOutcome', 'code');
  src.disposition -> tgt.disposition;
  src.date -> tgt.date;
  src.location -> tgt.location;
  src.method -> tgt.method;
  src.cardBrand -> tgt.cardBrand;
  src.accountNumber -> tgt.accountNumber;
  src.expirationDate -> tgt.expirationDate;
  src.processor -> tgt.processor;
  src.referenceNumber -> tgt.referenceNumber;
  src.authorization -> tgt.authorization;
  src.tenderedAmount -> tgt.tenderedAmount;
  src.returnedAmount -> tgt.returnedAmount;
  src.amount -> tgt.amount;
  src.paymentIdentifier -> tgt.paymentIdentifier;
  src.allocation as s -> tgt.allocation as t then PaymentReconciliationAllocation(s,t);
  src.formCode -> tgt.formCode;
  src.processNote as s -> tgt.processNote as t then PaymentReconciliationProcessNote(s,t);
}

group PaymentReconciliationAllocation(source src, target tgt) extends BackboneElement {
  src.identifier -> tgt.identifier;
  src.predecessor -> tgt.predecessor;
  src.target -> tgt.target;
  src.targetItem : string -> tgt.targetItem;
  src.targetItem : Identifier -> tgt.targetItem;
  src.targetItem : positiveInt -> tgt.targetItem;
  src.encounter -> tgt.encounter;
  src.account -> tgt.account;
  src.type -> tgt.type;
  src.submitter -> tgt.submitter;
  src.response -> tgt.response;
  src.date -> tgt.date;
  src.responsible -> tgt.responsible;
  src.payee -> tgt.payee;
  src.amount -> tgt.amount;
}

group PaymentReconciliationProcessNote(source src, target tgt) extends BackboneElement {
  src.type as v -> tgt.type = translate(v, '#NoteType', 'code');
  src.text -> tgt.text;
}

