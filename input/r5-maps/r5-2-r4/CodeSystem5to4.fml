/// url = 'http://hl7.org/fhir/StructureMap/CodeSystem5to4'
/// name = 'CodeSystem5to4'
/// title = 'FML Conversion for CodeSystem: R5 to R4'

/// status = 'active'

conceptmap "CodeSystemContentMode" {
  prefix s = "http://hl7.org/fhir/codesystem-content-mode"
  prefix t = "http://hl7.org/fhir/4.0/codesystem-content-mode"

  s:"not-present" - t:"not-present"
  s:"example" - t:"example"
  s:"fragment" - t:"fragment"
  s:"complete" - t:"complete"
  s:"supplement" - t:"supplement"
}

conceptmap "CodeSystemHierarchyMeaning" {
  prefix s = "http://hl7.org/fhir/codesystem-hierarchy-meaning"
  prefix t = "http://hl7.org/fhir/4.0/codesystem-hierarchy-meaning"

  s:"grouped-by" - t:"grouped-by"
  s:"is-a" - t:"is-a"
  s:"part-of" - t:"part-of"
  s:"classified-with" - t:"classified-with"
}

conceptmap "FilterOperator" {
  prefix s = "http://hl7.org/fhir/filter-operator"
  prefix t = "http://hl7.org/fhir/4.0/filter-operator"

  s:"=" - t:"="
  s:"is-a" - t:"is-a"
  s:"descendent-of" - t:"descendent-of"
  s:"is-not-a" - t:"is-not-a"
  s:"regex" - t:"regex"
  s:"in" - t:"in"
  s:"not-in" - t:"not-in"
  s:"generalizes" - t:"generalizes"
//  s:"child-of" - t:"child-of"
//  s:"descendent-leaf" - t:"descendent-leaf"
  s:"exists" - t:"exists"
}

conceptmap "PropertyType" {
  prefix s = "http://hl7.org/fhir/concept-property-type"
  prefix t = "http://hl7.org/fhir/4.0/concept-property-type"

  s:"code" - t:"code"
  s:"Coding" - t:"Coding"
  s:"string" - t:"string"
  s:"integer" - t:"integer"
  s:"boolean" - t:"boolean"
  s:"dateTime" - t:"dateTime"
  s:"decimal" - t:"decimal"
}

conceptmap "PublicationStatus" {
  prefix s = "http://hl7.org/fhir/publication-status"
  prefix t = "http://hl7.org/fhir/4.0/publication-status"

  s:"draft" - t:"draft"
  s:"active" - t:"active"
  s:"retired" - t:"retired"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/StructureDefinition/CodeSystem" alias CodeSystemR5 as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/CodeSystem" alias CodeSystemR4 as target

imports "http://hl7.org/fhir/StructureMap/*5to4"

group CodeSystem(source src : CodeSystemR5, target tgt : CodeSystemR4) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
//  src.versionAlgorithm : string -> tgt.versionAlgorithm;
//  src.versionAlgorithm : Coding -> tgt.versionAlgorithm;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.status as v -> tgt.status = translate(v, '#PublicationStatus', 'code');
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.description -> tgt.description;
  src.useContext -> tgt.useContext;
  src.jurisdiction -> tgt.jurisdiction;
  src.purpose -> tgt.purpose;
  src.copyright -> tgt.copyright;
//  src.copyrightLabel -> tgt.copyrightLabel;
//  src.approvalDate -> tgt.approvalDate;
//  src.lastReviewDate -> tgt.lastReviewDate;
//  src.effectivePeriod -> tgt.effectivePeriod;
//  src.topic -> tgt.topic;
//  src.author -> tgt.author;
//  src.editor -> tgt.editor;
//  src.reviewer -> tgt.reviewer;
//  src.endorser -> tgt.endorser;
//  src.relatedArtifact -> tgt.relatedArtifact;
  src.caseSensitive -> tgt.caseSensitive;
  src.valueSet -> tgt.valueSet;
  src.hierarchyMeaning as v -> tgt.hierarchyMeaning = translate(v, '#CodeSystemHierarchyMeaning', 'code');
  src.compositional -> tgt.compositional;
  src.versionNeeded -> tgt.versionNeeded;
  src.content as v -> tgt.content = translate(v, '#CodeSystemContentMode', 'code');
  src.supplements -> tgt.supplements;
  src.count -> tgt.count;
  src.filter as s -> tgt.filter as t then CodeSystemFilter(s,t);
  src.property as s -> tgt.property as t then CodeSystemProperty(s,t);
  src.concept as s -> tgt.concept as t then CodeSystemConcept(s,t);
}

group CodeSystemFilter(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.description -> tgt.description;
  src.operator as v -> tgt.operator = translate(v, '#FilterOperator', 'code');
  src.value -> tgt.value;
}

group CodeSystemProperty(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.uri -> tgt.uri;
  src.description -> tgt.description;
  src.type as v -> tgt.type = translate(v, '#PropertyType', 'code');
}

group CodeSystemConcept(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.display -> tgt.display;
  src.definition -> tgt.definition;
  src.designation as s -> tgt.designation as t then CodeSystemConceptDesignation(s,t);
  src.property as s -> tgt.property as t then CodeSystemConceptProperty(s,t);
  src.concept as s -> tgt.concept as t then CodeSystemConcept(s,t);
}

group CodeSystemConceptDesignation(source src, target tgt) extends BackboneElement {
  src.language -> tgt.language;
  src.use -> tgt.use;
//  src.additionalUse -> tgt.additionalUse;
  src.value -> tgt.value;
}

group CodeSystemConceptProperty(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.value : code -> tgt.value;
  src.value : Coding -> tgt.value;
  src.value : string -> tgt.value;
  src.value : integer -> tgt.value;
  src.value : boolean -> tgt.value;
  src.value : dateTime -> tgt.value;
  src.value : decimal -> tgt.value;
}

