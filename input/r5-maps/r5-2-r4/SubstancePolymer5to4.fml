/// url = 'http://hl7.org/fhir/StructureMap/SubstancePolymer5to4'
/// name = 'SubstancePolymer5to4'
/// title = 'FML Conversion for SubstancePolymer: R5 to R4'

uses "http://hl7.org/fhir/StructureDefinition/SubstancePolymer" alias SubstancePolymerR5 as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/SubstancePolymer" alias SubstancePolymerR4 as target

imports "http://hl7.org/fhir/StructureMap/*5to4"

group SubstancePolymer(source src : SubstancePolymerR5, target tgt : SubstancePolymerR4) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.class -> tgt.class;
  src.geometry -> tgt.geometry;
  src.copolymerConnectivity -> tgt.copolymerConnectivity;
  src.modification -> tgt.modification;
  src.monomerSet as s -> tgt.monomerSet as t then SubstancePolymerMonomerSet(s,t);
  src.repeat as s -> tgt.repeat as t then SubstancePolymerRepeat(s,t);
}

group SubstancePolymerMonomerSet(source src, target tgt) extends BackboneElement {
  src.ratioType -> tgt.ratioType;
  src.startingMaterial as s -> tgt.startingMaterial as t then SubstancePolymerMonomerSetStartingMaterial(s,t);
}

group SubstancePolymerMonomerSetStartingMaterial(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.category -> tgt.category;
  src.isDefining -> tgt.isDefining;
  src.amount -> tgt.amount;
}

group SubstancePolymerRepeat(source src, target tgt) extends BackboneElement {
  src.averageMolecularFormula -> tgt.averageMolecularFormula;
  src.repeatUnitAmountType -> tgt.repeatUnitAmountType;
  src.repeatUnit as s -> tgt.repeatUnit as t then SubstancePolymerRepeatRepeatUnit(s,t);
}

group SubstancePolymerRepeatRepeatUnit(source src, target tgt) extends BackboneElement {
  src.unit -> tgt.unit;
  src.orientation -> tgt.orientation;
  src.amount -> tgt.amount;
  src.degreeOfPolymerisation as s -> tgt.degreeOfPolymerisation as t then SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation(s,t);
  src.structuralRepresentation as s -> tgt.structuralRepresentation as t then SubstancePolymerRepeatRepeatUnitStructuralRepresentation(s,t);
}

group SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.average -> tgt.average;
  src.low -> tgt.low;
  src.high -> tgt.high;
}

group SubstancePolymerRepeatRepeatUnitStructuralRepresentation(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.representation -> tgt.representation;
  src.format -> tgt.format;
  src.attachment -> tgt.attachment;
}

