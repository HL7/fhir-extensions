/// url = 'http://hl7.org/fhir/StructureMap/Observation4to5'
/// name = 'Observation4to5'
/// title = 'FML Conversion for Observation: R4 to R5'

conceptmap "ObservationStatus" {
  prefix s = "http://hl7.org/fhir/4.0/observation-status"
  prefix t = "http://hl7.org/fhir/observation-status"

  s:"registered" - t:"registered"
  s:"preliminary" - t:"preliminary"
  s:"final" - t:"final"
  s:"amended" - t:"amended"
  s:"corrected" - t:"corrected"
  s:"cancelled" - t:"cancelled"
  s:"entered-in-error" - t:"entered-in-error"
  s:"unknown" - t:"unknown"
}

conceptmap "TriggeredByType" {
  prefix s = "http://hl7.org/fhir/4.0/observation-triggeredbytype"
  prefix t = "http://hl7.org/fhir/observation-triggeredbytype"

  s:"reflex" - t:"reflex"
  s:"repeat" - t:"repeat"
  s:"re-run" - t:"re-run"
}

uses "http://hl7.org/fhir/4.0/StructureDefinition/Observation" alias ObservationR4 as source
uses "http://hl7.org/fhir/StructureDefinition/Observation" alias ObservationR5 as target

imports "http://hl7.org/fhir/StructureMap/*4to5"

group Observation(source src : ObservationR4, target tgt : ObservationR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.instantiates : canonical -> tgt.instantiates;
  src.instantiates : Reference -> tgt.instantiates;
  src.basedOn -> tgt.basedOn;
  src.triggeredBy as s -> tgt.triggeredBy as t then ObservationTriggeredBy(s,t);
  src.partOf -> tgt.partOf;
  src.status as v -> tgt.status = translate(v, '#ObservationStatus', 'code');
  src.category -> tgt.category;
  src.code -> tgt.code;
  src.subject -> tgt.subject;
  src.focus -> tgt.focus;
  src.encounter -> tgt.encounter;
  src.effective : dateTime -> tgt.effective;
  src.effective : Period -> tgt.effective;
  src.effective : Timing -> tgt.effective;
  src.effective : instant -> tgt.effective;
  src.issued -> tgt.issued;
  src.performer -> tgt.performer;
  src.value : Quantity -> tgt.value;
  src.value : CodeableConcept -> tgt.value;
  src.value : markdown -> tgt.value;
  src.value : boolean -> tgt.value;
  src.value : integer -> tgt.value;
  src.value : Range -> tgt.value;
  src.value : Ratio -> tgt.value;
  src.value : SampledData -> tgt.value;
  src.value : time -> tgt.value;
  src.value : dateTime -> tgt.value;
  src.value : Period -> tgt.value;
  src.value : Attachment -> tgt.value;
  src.value : Reference -> tgt.value;
  src.value : canonical -> tgt.value;
  src.dataAbsentReason -> tgt.dataAbsentReason;
  src.interpretation -> tgt.interpretation;
  src.note -> tgt.note;
  src.bodySite -> tgt.bodySite;
  src.bodyStructure -> tgt.bodyStructure;
  src.method -> tgt.method;
  src.specimen -> tgt.specimen;
  src.device -> tgt.device;
  src.referenceRange as s -> tgt.referenceRange as t then ObservationReferenceRange(s,t);
  src.hasMember -> tgt.hasMember;
  src.derivedFrom -> tgt.derivedFrom;
  src.component as s -> tgt.component as t then ObservationComponent(s,t);
}

group ObservationTriggeredBy(source src, target tgt) extends BackboneElement {
  src.observation -> tgt.observation;
  src.type as v -> tgt.type = translate(v, '#TriggeredByType', 'code');
  src.reason -> tgt.reason;
}

group ObservationReferenceRange(source src, target tgt) extends BackboneElement {
  src.low -> tgt.low;
  src.high -> tgt.high;
  src.normalValue -> tgt.normalValue;
  src.type -> tgt.type;
  src.appliesTo -> tgt.appliesTo;
  src.age -> tgt.age;
  src.text -> tgt.text;
}

group ObservationComponent(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.value : Quantity -> tgt.value;
  src.value : CodeableConcept -> tgt.value;
  src.value : markdown -> tgt.value;
  src.value : boolean -> tgt.value;
  src.value : integer -> tgt.value;
  src.value : Range -> tgt.value;
  src.value : Ratio -> tgt.value;
  src.value : SampledData -> tgt.value;
  src.value : time -> tgt.value;
  src.value : dateTime -> tgt.value;
  src.value : Period -> tgt.value;
  src.value : Attachment -> tgt.value;
  src.value : Reference -> tgt.value;
  src.value : canonical -> tgt.value;
  src.dataAbsentReason -> tgt.dataAbsentReason;
  src.interpretation -> tgt.interpretation;
}

