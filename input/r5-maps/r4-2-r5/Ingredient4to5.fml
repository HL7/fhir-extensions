/// url = 'http://hl7.org/fhir/StructureMap/Ingredient4to5'
/// name = 'Ingredient4to5'
/// title = 'FML Conversion for Ingredient: R4 to R5'

conceptmap "IngredientManufacturerRole" {
  prefix s = "http://hl7.org/fhir/4.0/ingredient-manufacturer-role"
  prefix t = "http://hl7.org/fhir/ingredient-manufacturer-role"

  s:"allowed" - t:"allowed"
  s:"possible" - t:"possible"
  s:"actual" - t:"actual"
}

conceptmap "PublicationStatus" {
  prefix s = "http://hl7.org/fhir/4.0/publication-status"
  prefix t = "http://hl7.org/fhir/publication-status"

  s:"draft" - t:"draft"
  s:"active" - t:"active"
  s:"retired" - t:"retired"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/4.0/StructureDefinition/Ingredient" alias IngredientR4 as source
uses "http://hl7.org/fhir/StructureDefinition/Ingredient" alias IngredientR5 as target

imports "http://hl7.org/fhir/StructureMap/*4to5"

group Ingredient(source src : IngredientR4, target tgt : IngredientR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status as v -> tgt.status = translate(v, '#PublicationStatus', 'code');
  src.for -> tgt.for;
  src.role -> tgt.role;
  src.function -> tgt.function;
  src.group -> tgt.group;
  src.allergenicIndicator -> tgt.allergenicIndicator;
  src.comment -> tgt.comment;
  src.manufacturer as s -> tgt.manufacturer as t then IngredientManufacturer(s,t);
  src.substance as s -> tgt.substance as t then IngredientSubstance(s,t);
}

group IngredientManufacturer(source src, target tgt) extends BackboneElement {
  src.role as v -> tgt.role = translate(v, '#IngredientManufacturerRole', 'code');
  src.manufacturer -> tgt.manufacturer;
}

group IngredientSubstance(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.strength as s -> tgt.strength as t then IngredientSubstanceStrength(s,t);
}

group IngredientSubstanceStrength(source src, target tgt) extends BackboneElement {
  src.presentation : Ratio -> tgt.presentation;
  src.presentation : RatioRange -> tgt.presentation;
  src.presentation : CodeableConcept -> tgt.presentation;
  src.presentation : Quantity -> tgt.presentation;
  src.textPresentation -> tgt.textPresentation;
  src.concentration : Ratio -> tgt.concentration;
  src.concentration : RatioRange -> tgt.concentration;
  src.concentration : CodeableConcept -> tgt.concentration;
  src.concentration : Quantity -> tgt.concentration;
  src.textConcentration -> tgt.textConcentration;
  src.basis -> tgt.basis;
  src.measurementPoint -> tgt.measurementPoint;
  src.country -> tgt.country;
  src.referenceStrength as s -> tgt.referenceStrength as t then IngredientSubstanceStrengthReferenceStrength(s,t);
}

group IngredientSubstanceStrengthReferenceStrength(source src, target tgt) extends BackboneElement {
  src.substance -> tgt.substance;
  src.strength : Ratio -> tgt.strength;
  src.strength : RatioRange -> tgt.strength;
  src.strength : Quantity -> tgt.strength;
  src.measurementPoint -> tgt.measurementPoint;
  src.country -> tgt.country;
}

