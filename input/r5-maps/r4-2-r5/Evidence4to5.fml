/// url = 'http://hl7.org/fhir/StructureMap/Evidence4to5'
/// name = 'Evidence4to5'
/// title = 'FML Conversion for Evidence: R4 to R5'

conceptmap "EvidenceVariableHandling" {
  prefix s = "http://hl7.org/fhir/4.0/variable-handling"
  prefix t = "http://hl7.org/fhir/variable-handling"

  s:"continuous" - t:"continuous"
  s:"dichotomous" - t:"dichotomous"
  s:"ordinal" - t:"ordinal"
  s:"polychotomous" - t:"polychotomous"
}

conceptmap "PublicationStatus" {
  prefix s = "http://hl7.org/fhir/4.0/publication-status"
  prefix t = "http://hl7.org/fhir/publication-status"

  s:"draft" - t:"draft"
  s:"active" - t:"active"
  s:"retired" - t:"retired"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/4.0/StructureDefinition/Evidence" alias EvidenceR4 as source
uses "http://hl7.org/fhir/StructureDefinition/Evidence" alias EvidenceR5 as target

imports "http://hl7.org/fhir/StructureMap/*4to5"

group Evidence(source src : EvidenceR4, target tgt : EvidenceR5) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
  src.versionAlgorithm : string -> tgt.versionAlgorithm;
  src.versionAlgorithm : Coding -> tgt.versionAlgorithm;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.citeAs : Reference -> tgt.citeAs;
  src.citeAs : markdown -> tgt.citeAs;
  src.status as v -> tgt.status = translate(v, '#PublicationStatus', 'code');
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.approvalDate -> tgt.approvalDate;
  src.lastReviewDate -> tgt.lastReviewDate;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.author -> tgt.author;
  src.editor -> tgt.editor;
  src.reviewer -> tgt.reviewer;
  src.endorser -> tgt.endorser;
  src.useContext -> tgt.useContext;
  src.purpose -> tgt.purpose;
  src.copyright -> tgt.copyright;
  src.copyrightLabel -> tgt.copyrightLabel;
  src.relatedArtifact -> tgt.relatedArtifact;
  src.description -> tgt.description;
  src.assertion -> tgt.assertion;
  src.note -> tgt.note;
  src.variableDefinition as s -> tgt.variableDefinition as t then EvidenceVariableDefinition(s,t);
  src.synthesisType -> tgt.synthesisType;
  src.studyDesign -> tgt.studyDesign;
  src.statistic as s -> tgt.statistic as t then EvidenceStatistic(s,t);
  src.certainty as s -> tgt.certainty as t then EvidenceCertainty(s,t);
}

group EvidenceVariableDefinition(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.variableRole -> tgt.variableRole;
  src.observed -> tgt.observed;
  src.intended -> tgt.intended;
  src.directnessMatch -> tgt.directnessMatch;
}

group EvidenceStatistic(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.statisticType -> tgt.statisticType;
  src.category -> tgt.category;
  src.quantity -> tgt.quantity;
  src.numberOfEvents -> tgt.numberOfEvents;
  src.numberAffected -> tgt.numberAffected;
  src.sampleSize as s -> tgt.sampleSize as t then EvidenceStatisticSampleSize(s,t);
  src.attributeEstimate as s -> tgt.attributeEstimate as t then EvidenceStatisticAttributeEstimate(s,t);
  src.modelCharacteristic as s -> tgt.modelCharacteristic as t then EvidenceStatisticModelCharacteristic(s,t);
}

group EvidenceStatisticSampleSize(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.numberOfStudies -> tgt.numberOfStudies;
  src.numberOfParticipants -> tgt.numberOfParticipants;
  src.knownDataCount -> tgt.knownDataCount;
}

group EvidenceStatisticAttributeEstimate(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.type -> tgt.type;
  src.quantity -> tgt.quantity;
  src.level -> tgt.level;
  src.range -> tgt.range;
}

group EvidenceStatisticModelCharacteristic(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.value -> tgt.value;
  src.variable as s -> tgt.variable as t then EvidenceStatisticModelCharacteristicVariable(s,t);
}

group EvidenceStatisticModelCharacteristicVariable(source src, target tgt) extends BackboneElement {
  src.variableDefinition -> tgt.variableDefinition;
  src.handling as v -> tgt.handling = translate(v, '#EvidenceVariableHandling', 'code');
  src.valueCategory -> tgt.valueCategory;
  src.valueQuantity -> tgt.valueQuantity;
  src.valueRange -> tgt.valueRange;
}

group EvidenceCertainty(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.type -> tgt.type;
  src.rating -> tgt.rating;
  src.rater -> tgt.rater;
}

