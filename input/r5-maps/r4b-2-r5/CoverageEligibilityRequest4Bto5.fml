/// url = 'http://hl7.org/fhir/StructureMap/CoverageEligibilityRequest4Bto5'
/// name = 'CoverageEligibilityRequest4Bto5'
/// title = 'FML Conversion for CoverageEligibilityRequest: R4B to R5'

conceptmap "EligibilityRequestPurpose" {
  prefix s = "http://hl7.org/fhir/4.3/eligibilityrequest-purpose"
  prefix t = "http://hl7.org/fhir/eligibilityrequest-purpose"

  s:"auth-requirements" - t:"auth-requirements"
  s:"benefits" - t:"benefits"
  s:"discovery" - t:"discovery"
  s:"validation" - t:"validation"
}

conceptmap "EligibilityRequestStatus" {
  prefix s = "http://hl7.org/fhir/4.3/fm-status"
  prefix t = "http://hl7.org/fhir/fm-status"

  s:"active" - t:"active"
  s:"cancelled" - t:"cancelled"
  s:"draft" - t:"draft"
  s:"entered-in-error" - t:"entered-in-error"
}

uses "http://hl7.org/fhir/4.3/StructureDefinition/CoverageEligibilityRequest" alias CoverageEligibilityRequestR4B as source
uses "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityRequest" alias CoverageEligibilityRequestR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group CoverageEligibilityRequest(source src : CoverageEligibilityRequestR4B, target tgt : CoverageEligibilityRequestR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status as v -> tgt.status = translate(v, '#EligibilityRequestStatus', 'code');
  src.priority -> tgt.priority;
  src.purpose as v -> tgt.purpose = translate(v, '#EligibilityRequestPurpose', 'code');
  src.patient -> tgt.patient;
  src.event as s -> tgt.event as t then CoverageEligibilityRequestEvent(s,t);
  src.serviced : date -> tgt.serviced;
  src.serviced : Period -> tgt.serviced;
  src.created -> tgt.created;
  src.enterer -> tgt.enterer;
  src.provider -> tgt.provider;
  src.insurer -> tgt.insurer;
  src.facility -> tgt.facility;
  src.supportingInfo as s -> tgt.supportingInfo as t then CoverageEligibilityRequestSupportingInfo(s,t);
  src.insurance as s -> tgt.insurance as t then CoverageEligibilityRequestInsurance(s,t);
  src.item as s -> tgt.item as t then CoverageEligibilityRequestItem(s,t);
}

group CoverageEligibilityRequestEvent(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.when : dateTime -> tgt.when;
  src.when : Period -> tgt.when;
}

group CoverageEligibilityRequestSupportingInfo(source src, target tgt) extends BackboneElement {
  src.sequence -> tgt.sequence;
  src.information -> tgt.information;
  src.appliesToAll -> tgt.appliesToAll;
}

group CoverageEligibilityRequestInsurance(source src, target tgt) extends BackboneElement {
  src.focal -> tgt.focal;
  src.coverage -> tgt.coverage;
  src.businessArrangement -> tgt.businessArrangement;
}

group CoverageEligibilityRequestItem(source src, target tgt) extends BackboneElement {
  src.supportingInfoSequence -> tgt.supportingInfoSequence;
  src.category -> tgt.category;
  src.productOrService -> tgt.productOrService;
  src.modifier -> tgt.modifier;
  src.provider -> tgt.provider;
  src.quantity -> tgt.quantity;
  src.unitPrice -> tgt.unitPrice;
  src.facility -> tgt.facility;
  src.diagnosis as s -> tgt.diagnosis as t then CoverageEligibilityRequestItemDiagnosis(s,t);
  src.detail -> tgt.detail;
}

group CoverageEligibilityRequestItemDiagnosis(source src, target tgt) extends BackboneElement {
  src.diagnosis : CodeableConcept -> tgt.diagnosis;
  src.diagnosis : Reference -> tgt.diagnosis;
}

