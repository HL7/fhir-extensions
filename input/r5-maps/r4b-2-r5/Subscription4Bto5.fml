/// url = 'http://hl7.org/fhir/StructureMap/Subscription4Bto5'
/// name = 'Subscription4Bto5'
/// title = 'FML Conversion for Subscription: R4B to R5'

/// status = 'active'

conceptmap "SubscriptionStatusCodes" {
  prefix s = "http://hl7.org/fhir/4.3/subscription-status"
  prefix t = "http://hl7.org/fhir/subscription-status"

  s:"requested" - t:"requested"
  s:"active" - t:"active"
  s:"error" - t:"error"
  s:"off" - t:"off"
//  s:"entered-in-error" - t:"entered-in-error"
}

uses "http://hl7.org/fhir/4.3/StructureDefinition/Subscription" alias SubscriptionR4B as source
uses "http://hl7.org/fhir/StructureDefinition/Subscription" alias SubscriptionR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group Subscription(source src : SubscriptionR4B, target tgt : SubscriptionR5) extends DomainResource <<type+>> {
//  src.identifier -> tgt.identifier;
//  src.name -> tgt.name;
  src.status as v -> tgt.status = translate(v, '#SubscriptionStatusCodes', 'code');
//  src.topic -> tgt.topic;
  src.contact -> tgt.contact;
  src.end -> tgt.end;
//  src.managingEntity -> tgt.managingEntity;
  src.reason -> tgt.reason;
// criteria replaced - see subscriptions backport IG
//  src.filterBy as s -> tgt.filterBy as t then SubscriptionFilterBy(s,t);
  src.channel as s -> tgt then {
    s.type as s1 -> tgt.channelType = create('Coding') as t, t.code = s1;
    s.endpoint -> tgt.endpoint;
    s.header as s1 -> tgt.parameter as t, t.name = (%s1.substring(0, %s1.indexOf(': '))), t.value = (%s1.substring(%s1.indexOf(': ')+1));
    s.payload -> tgt.contentType;
  };
//  src.heartbeatPeriod -> tgt.heartbeatPeriod;
//  src.timeout -> tgt.timeout;
//  src.content as v -> tgt.content = translate(v, '#SubscriptionPayloadContent', 'code');
//  src.maxCount -> tgt.maxCount;
}
