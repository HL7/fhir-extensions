/// url = 'http://hl7.org/fhir/StructureMap/HealthcareService4Bto5'
/// name = 'HealthcareService4Bto5'
/// title = 'FML Conversion for HealthcareService: R4B to R5'

/// status = 'active'

uses "http://hl7.org/fhir/4.3/StructureDefinition/HealthcareService" alias HealthcareServiceR4B as source
uses "http://hl7.org/fhir/StructureDefinition/HealthcareService" alias HealthcareServiceR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group HealthcareService(source src : HealthcareServiceR4B, target tgt : HealthcareServiceR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.active -> tgt.active;
  src.providedBy -> tgt.providedBy;
//  src.offeredIn -> tgt.offeredIn;
  src.category -> tgt.category;
  src.type -> tgt.type;
  src.specialty -> tgt.specialty;
  src.location -> tgt.location;
  src.name -> tgt.name;
  src.comment -> tgt.comment;
  src.extraDetails -> tgt.extraDetails;
  src.photo -> tgt.photo;
//  src.contact -> tgt.contact;
  src.coverageArea -> tgt.coverageArea;
  src.serviceProvisionCode -> tgt.serviceProvisionCode;
  src.eligibility as s -> tgt.eligibility as t then HealthcareServiceEligibility(s,t);
  src.program -> tgt.program;
  src.characteristic -> tgt.characteristic;
  src.communication -> tgt.communication;
  src.referralMethod -> tgt.referralMethod;
  src.appointmentRequired -> tgt.appointmentRequired;
  src.availableTime as s -> tgt.availability as t then HealthcareServiceAvailabilityAvailableTime(s,t) "availableTime";
  src.notAvailable as s -> tgt.availability as t then HealthcareServiceAvailabilityNotAvailableTime(s,t) "notAvailableTime";
  src.endpoint -> tgt.endpoint;
}

group HealthcareServiceEligibility(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.comment -> tgt.comment;
}

group HealthcareServiceAvailabilityAvailableTime(source src, target tgt) extends BackboneElement {
  src.daysOfWeek as s -> tgt.availableTime as t, t.daysOfWeek = s;
  src.allDay as s -> tgt.availableTime as t, t.allDay = s;
  src.availableStartTime as s -> tgt.availableTime as t, t.availableStartTime = s;
  src.availableEndTime as s -> tgt.availableTime as t, t.availableEndTime = s;
}

group HealthcareServiceAvailabilityNotAvailableTime(source src, target tgt) extends BackboneElement {
  src.description as s -> tgt.notAvailableTime as t, t.description = s;
  src.during as s -> tgt.notAvailableTime as t, t.during = s;
}

