/// url = 'http://hl7.org/fhir/StructureMap/DeviceMetric4Bto5'
/// name = 'DeviceMetric4Bto5'
/// title = 'FML Conversion for DeviceMetric: R4B to R5'

conceptmap "DeviceMetricCalibrationState" {
  prefix s = "http://hl7.org/fhir/4.3/metric-calibration-state"
  prefix t = "http://hl7.org/fhir/metric-calibration-state"

  s:"not-calibrated" - t:"not-calibrated"
  s:"calibration-required" - t:"calibration-required"
  s:"calibrated" - t:"calibrated"
  s:"unspecified" - t:"unspecified"
}

conceptmap "DeviceMetricCalibrationType" {
  prefix s = "http://hl7.org/fhir/4.3/metric-calibration-type"
  prefix t = "http://hl7.org/fhir/metric-calibration-type"

  s:"unspecified" - t:"unspecified"
  s:"offset" - t:"offset"
  s:"gain" - t:"gain"
  s:"two-point" - t:"two-point"
}

conceptmap "DeviceMetricCategory" {
  prefix s = "http://hl7.org/fhir/4.3/metric-category"
  prefix t = "http://hl7.org/fhir/metric-category"

  s:"measurement" - t:"measurement"
  s:"setting" - t:"setting"
  s:"calculation" - t:"calculation"
  s:"unspecified" - t:"unspecified"
}

conceptmap "DeviceMetricColor" {
  prefix s = "http://hl7.org/fhir/4.3/metric-color"
  prefix t = "http://hl7.org/fhir/metric-color"

  s:"black" - t:"black"
  s:"red" - t:"red"
  s:"green" - t:"green"
  s:"yellow" - t:"yellow"
  s:"blue" - t:"blue"
  s:"magenta" - t:"magenta"
  s:"cyan" - t:"cyan"
  s:"white" - t:"white"
}

conceptmap "DeviceMetricOperationalStatus" {
  prefix s = "http://hl7.org/fhir/4.3/metric-operational-status"
  prefix t = "http://hl7.org/fhir/metric-operational-status"

  s:"on" - t:"on"
  s:"off" - t:"off"
  s:"standby" - t:"standby"
  s:"entered-in-error" - t:"entered-in-error"
}

uses "http://hl7.org/fhir/4.3/StructureDefinition/DeviceMetric" alias DeviceMetricR4B as source
uses "http://hl7.org/fhir/StructureDefinition/DeviceMetric" alias DeviceMetricR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group DeviceMetric(source src : DeviceMetricR4B, target tgt : DeviceMetricR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.type -> tgt.type;
  src.unit -> tgt.unit;
  src.device -> tgt.device;
  src.operationalStatus as v -> tgt.operationalStatus = translate(v, '#DeviceMetricOperationalStatus', 'code');
  src.color as v -> tgt.color = translate(v, '#DeviceMetricColor', 'code');
  src.category as v -> tgt.category = translate(v, '#DeviceMetricCategory', 'code');
  src.measurementFrequency -> tgt.measurementFrequency;
  src.calibration as s -> tgt.calibration as t then DeviceMetricCalibration(s,t);
}

group DeviceMetricCalibration(source src, target tgt) extends BackboneElement {
  src.type as v -> tgt.type = translate(v, '#DeviceMetricCalibrationType', 'code');
  src.state as v -> tgt.state = translate(v, '#DeviceMetricCalibrationState', 'code');
  src.time -> tgt.time;
}

