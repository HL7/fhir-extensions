/// url = 'http://hl7.org/fhir/StructureMap/Group4Bto5'
/// name = 'Group4Bto5'
/// title = 'FML Conversion for Group: R4B to R5'

conceptmap "GroupType" {
  prefix s = "http://hl7.org/fhir/4.3/group-type"
  prefix t = "http://hl7.org/fhir/group-type"

  s:"person" - t:"person"
  s:"animal" - t:"animal"
  s:"practitioner" - t:"practitioner"
  s:"device" - t:"device"
  s:"careteam" - t:"careteam"
  s:"healthcareservice" - t:"healthcareservice"
  s:"location" - t:"location"
  s:"organization" - t:"organization"
  s:"relatedperson" - t:"relatedperson"
  s:"specimen" - t:"specimen"
}

conceptmap "group-membership-basis" {
  prefix s = "http://hl7.org/fhir/4.3/group-membership-basis"
  prefix t = "http://hl7.org/fhir/group-membership-basis"

  s:"definitional" - t:"definitional"
  s:"enumerated" - t:"enumerated"
}

uses "http://hl7.org/fhir/4.3/StructureDefinition/Group" alias GroupR4B as source
uses "http://hl7.org/fhir/StructureDefinition/Group" alias GroupR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group Group(source src : GroupR4B, target tgt : GroupR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.active -> tgt.active;
  src.type as v -> tgt.type = translate(v, '#GroupType', 'code');
  src.membership as v -> tgt.membership = translate(v, '#group-membership-basis', 'code');
  src.code -> tgt.code;
  src.name -> tgt.name;
  src.description -> tgt.description;
  src.quantity -> tgt.quantity;
  src.managingEntity -> tgt.managingEntity;
  src.characteristic as s -> tgt.characteristic as t then GroupCharacteristic(s,t);
  src.member as s -> tgt.member as t then GroupMember(s,t);
}

group GroupCharacteristic(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.value : CodeableConcept -> tgt.value;
  src.value : boolean -> tgt.value;
  src.value : Quantity -> tgt.value;
  src.value : Range -> tgt.value;
  src.value : Reference -> tgt.value;
  src.exclude -> tgt.exclude;
  src.period -> tgt.period;
}

group GroupMember(source src, target tgt) extends BackboneElement {
  src.entity -> tgt.entity;
  src.period -> tgt.period;
  src.inactive -> tgt.inactive;
}

