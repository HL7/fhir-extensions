/// url = 'http://hl7.org/fhir/StructureMap/PractitionerRole4Bto5'
/// name = 'PractitionerRole4Bto5'
/// title = 'FML Conversion for PractitionerRole: R4B to R5'

/// status = 'active'

uses "http://hl7.org/fhir/4.3/StructureDefinition/PractitionerRole" alias PractitionerRoleR4B as source
uses "http://hl7.org/fhir/StructureDefinition/PractitionerRole" alias PractitionerRoleR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group PractitionerRole(source src : PractitionerRoleR4B, target tgt : PractitionerRoleR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.active -> tgt.active;
  src.period -> tgt.period;
  src.practitioner -> tgt.practitioner;
  src.organization -> tgt.organization;
  src.code -> tgt.code;
  src.specialty -> tgt.specialty;
  src.location -> tgt.location;
  src.healthcareService -> tgt.healthcareService;
  src.telecom : ContactPoint as s -> tgt.contact = create('ExtendedContactDetail') as t, t.telecom = s;
//  src.characteristic -> tgt.characteristic;
//  src.communication -> tgt.communication;
  src.availableTime as s -> tgt.availability = create('Availability') as av share av, av.availableTime as t then PractitionerRoleAvailabilityAvailableTime(s,t) "availableTime";
  src.notAvailable as s -> tgt.availability = create('Availability') as av share av, av.notAvailableTime as t then PractitionerRoleAvailabilityNotAvailableTime(s,t) "notAvailableTime";
  src.endpoint -> tgt.endpoint;
}

group PractitionerRoleAvailabilityAvailableTime(source src, target tgt) extends BackboneElement {
  src.availableTime as s -> tgt.daysOfWeek as t, t = s.daysOfWeek;
  src.availableTime as s -> tgt.allDay as t, t = s.allDay;
  src.availableTime as s -> tgt.availableStartTime as t, t = s.availableStartTime;
  src.availableTime as s -> tgt.availableEndTime as t, t = s.availableEndTime;
}

group PractitionerRoleAvailabilityNotAvailableTime(source src, target tgt) extends BackboneElement {
  src.notAvailableTime as s -> tgt.description as t, t = s.description;
  src.notAvailableTime as s -> tgt.during as t, t = s.during;
}
