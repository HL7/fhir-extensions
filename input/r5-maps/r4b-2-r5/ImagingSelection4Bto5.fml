/// url = 'http://hl7.org/fhir/StructureMap/ImagingSelection4Bto5'
/// name = 'ImagingSelection4Bto5'
/// title = 'FML Conversion for ImagingSelection: R4B to R5'

conceptmap "ImagingSelection2DGraphicType" {
  prefix s = "http://hl7.org/fhir/4.3/imagingselection-2dgraphictype"
  prefix t = "http://hl7.org/fhir/imagingselection-2dgraphictype"

  s:"point" - t:"point"
  s:"polyline" - t:"polyline"
  s:"interpolated" - t:"interpolated"
  s:"circle" - t:"circle"
  s:"ellipse" - t:"ellipse"
}

conceptmap "ImagingSelection3DGraphicType" {
  prefix s = "http://hl7.org/fhir/4.3/imagingselection-3dgraphictype"
  prefix t = "http://hl7.org/fhir/imagingselection-3dgraphictype"

  s:"point" - t:"point"
  s:"multipoint" - t:"multipoint"
  s:"polyline" - t:"polyline"
  s:"polygon" - t:"polygon"
  s:"ellipse" - t:"ellipse"
  s:"ellipsoid" - t:"ellipsoid"
}

conceptmap "ImagingSelectionStatus" {
  prefix s = "http://hl7.org/fhir/4.3/imagingselection-status"
  prefix t = "http://hl7.org/fhir/imagingselection-status"

  s:"available" - t:"available"
  s:"entered-in-error" - t:"entered-in-error"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/4.3/StructureDefinition/ImagingSelection" alias ImagingSelectionR4B as source
uses "http://hl7.org/fhir/StructureDefinition/ImagingSelection" alias ImagingSelectionR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5"

group ImagingSelection(source src : ImagingSelectionR4B, target tgt : ImagingSelectionR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status as v -> tgt.status = translate(v, '#ImagingSelectionStatus', 'code');
  src.subject -> tgt.subject;
  src.issued -> tgt.issued;
  src.performer as s -> tgt.performer as t then ImagingSelectionPerformer(s,t);
  src.basedOn -> tgt.basedOn;
  src.category -> tgt.category;
  src.code -> tgt.code;
  src.studyUid -> tgt.studyUid;
  src.derivedFrom -> tgt.derivedFrom;
  src.endpoint -> tgt.endpoint;
  src.seriesUid -> tgt.seriesUid;
  src.seriesNumber -> tgt.seriesNumber;
  src.frameOfReferenceUid -> tgt.frameOfReferenceUid;
  src.bodySite -> tgt.bodySite;
  src.focus -> tgt.focus;
  src.instance as s -> tgt.instance as t then ImagingSelectionInstance(s,t);
}

group ImagingSelectionPerformer(source src, target tgt) extends BackboneElement {
  src.function -> tgt.function;
  src.actor -> tgt.actor;
}

group ImagingSelectionInstance(source src, target tgt) extends BackboneElement {
  src.uid -> tgt.uid;
  src.number -> tgt.number;
  src.sopClass -> tgt.sopClass;
  src.subset -> tgt.subset;
  src.imageRegion2D as s -> tgt.imageRegion2D as t then ImagingSelectionInstanceImageRegion2D(s,t);
  src.imageRegion3D as s -> tgt.imageRegion3D as t then ImagingSelectionInstanceImageRegion3D(s,t);
}

group ImagingSelectionInstanceImageRegion2D(source src, target tgt) extends BackboneElement {
  src.regionType as v -> tgt.regionType = translate(v, '#ImagingSelection2DGraphicType', 'code');
  src.coordinate -> tgt.coordinate;
}

group ImagingSelectionInstanceImageRegion3D(source src, target tgt) extends BackboneElement {
  src.regionType as v -> tgt.regionType = translate(v, '#ImagingSelection3DGraphicType', 'code');
  src.coordinate -> tgt.coordinate;
}

