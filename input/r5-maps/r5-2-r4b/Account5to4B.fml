/// url = 'http://hl7.org/fhir/StructureMap/Account5to4B'
/// name = 'Account5to4B'
/// title = 'FML Conversion for Account: R5 to R4B'

/// status = 'active'

conceptmap "AccountStatus" {
  prefix s = "http://hl7.org/fhir/account-status"
  prefix t = "http://hl7.org/fhir/4.3/account-status"

  s:"active" - t:"active"
  s:"inactive" - t:"inactive"
  s:"entered-in-error" - t:"entered-in-error"
  s:"on-hold" - t:"on-hold"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/StructureDefinition/Account" alias AccountR5 as source
uses "http://hl7.org/fhir/4.3/StructureDefinition/Account" alias AccountR4B as target

imports "http://hl7.org/fhir/StructureMap/*5to4B"

group Account(source src : AccountR5, target tgt : AccountR4B) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status as v -> tgt.status = translate(v, '#AccountStatus', 'code');
  // version-specific extension needs to be applied here
  // src.billingStatus -> tgt.billingStatus;
  src.type -> tgt.type;
  src.name -> tgt.name;
  src.subject -> tgt.subject;
  src.servicePeriod -> tgt.servicePeriod;
  src.coverage as s -> tgt.coverage as t then AccountCoverage(s,t);
  src.owner -> tgt.owner;
  src.description -> tgt.description;
  src.guarantor as s -> tgt.guarantor as t then AccountGuarantor(s,t);
  // src.diagnosis as s -> tgt.diagnosis as t then AccountDiagnosis(s,t);
  // src.procedure as s -> tgt.procedure as t then AccountProcedure(s,t);
  // src.relatedAccount as s -> tgt.relatedAccount as t then AccountRelatedAccount(s,t);
  // src.currency -> tgt.currency;
  // src.balance as s -> tgt.balance as t then AccountBalance(s,t);
  // src.calculatedAt -> tgt.calculatedAt;
}

group AccountCoverage(source src, target tgt) extends BackboneElement {
  src.coverage -> tgt.coverage;
  src.priority -> tgt.priority;
}

group AccountGuarantor(source src, target tgt) extends BackboneElement {
  src.party -> tgt.party;
  src.onHold -> tgt.onHold;
  src.period -> tgt.period;
}

// group AccountDiagnosis(source src, target tgt) extends BackboneElement {
//   src.sequence -> tgt.sequence;
//   src.condition -> tgt.condition;
//   src.dateOfDiagnosis -> tgt.dateOfDiagnosis;
//   src.type -> tgt.type;
//   src.onAdmission -> tgt.onAdmission;
//   src.packageCode -> tgt.packageCode;
// }

// group AccountProcedure(source src, target tgt) extends BackboneElement {
//   src.sequence -> tgt.sequence;
//   src.code -> tgt.code;
//   src.dateOfService -> tgt.dateOfService;
//   src.type -> tgt.type;
//   src.packageCode -> tgt.packageCode;
//   src.device -> tgt.device;
// }

// group AccountRelatedAccount(source src, target tgt) extends BackboneElement {
//   src.relationship -> tgt.relationship;
//   src.account -> tgt.account;
// }

// group AccountBalance(source src, target tgt) extends BackboneElement {
//   src.aggregate -> tgt.aggregate;
//   src.term -> tgt.term;
//   src.estimate -> tgt.estimate;
//   src.amount -> tgt.amount;
// }

