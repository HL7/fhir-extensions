/// url = 'http://hl7.org/fhir/StructureMap/EvidenceVariable5to4B'
/// name = 'EvidenceVariable5to4B'
/// title = 'FML Conversion for EvidenceVariable: R5 to R4B'

conceptmap "CharacteristicCombination" {
  prefix s = "http://hl7.org/fhir/characteristic-combination"
  prefix t = "http://hl7.org/fhir/4.3/characteristic-combination"

  s:"all-of" - t:"all-of"
  s:"any-of" - t:"any-of"
  s:"at-least" - t:"at-least"
  s:"at-most" - t:"at-most"
  s:"statistical" - t:"statistical"
  s:"net-effect" - t:"net-effect"
  s:"dataset" - t:"dataset"
}

conceptmap "EvidenceVariableHandling" {
  prefix s = "http://hl7.org/fhir/variable-handling"
  prefix t = "http://hl7.org/fhir/4.3/variable-handling"

  s:"continuous" - t:"continuous"
  s:"dichotomous" - t:"dichotomous"
  s:"ordinal" - t:"ordinal"
  s:"polychotomous" - t:"polychotomous"
}

conceptmap "PublicationStatus" {
  prefix s = "http://hl7.org/fhir/publication-status"
  prefix t = "http://hl7.org/fhir/4.3/publication-status"

  s:"draft" - t:"draft"
  s:"active" - t:"active"
  s:"retired" - t:"retired"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/StructureDefinition/EvidenceVariable" alias EvidenceVariableR5 as source
uses "http://hl7.org/fhir/4.3/StructureDefinition/EvidenceVariable" alias EvidenceVariableR4B as target

imports "http://hl7.org/fhir/StructureMap/*5to4B"

group EvidenceVariable(source src : EvidenceVariableR5, target tgt : EvidenceVariableR4B) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
  src.versionAlgorithm : string -> tgt.versionAlgorithm;
  src.versionAlgorithm : Coding -> tgt.versionAlgorithm;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.shortTitle -> tgt.shortTitle;
  src.status as v -> tgt.status = translate(v, '#PublicationStatus', 'code');
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.useContext -> tgt.useContext;
  src.purpose -> tgt.purpose;
  src.copyright -> tgt.copyright;
  src.copyrightLabel -> tgt.copyrightLabel;
  src.approvalDate -> tgt.approvalDate;
  src.lastReviewDate -> tgt.lastReviewDate;
  src.effectivePeriod -> tgt.effectivePeriod;
  src.author -> tgt.author;
  src.editor -> tgt.editor;
  src.reviewer -> tgt.reviewer;
  src.endorser -> tgt.endorser;
  src.relatedArtifact -> tgt.relatedArtifact;
  src.actual -> tgt.actual;
  src.characteristic as s -> tgt.characteristic as t then EvidenceVariableCharacteristic(s,t);
  src.handling as v -> tgt.handling = translate(v, '#EvidenceVariableHandling', 'code');
  src.category as s -> tgt.category as t then EvidenceVariableCategory(s,t);
}

group EvidenceVariableCharacteristic(source src, target tgt) extends BackboneElement {
  src.linkId -> tgt.linkId;
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.exclude -> tgt.exclude;
  src.definitionReference -> tgt.definitionReference;
  src.definitionCanonical -> tgt.definitionCanonical;
  src.definitionCodeableConcept -> tgt.definitionCodeableConcept;
  src.definitionExpression -> tgt.definitionExpression;
  src.definitionId -> tgt.definitionId;
  src.definitionByTypeAndValue as s -> tgt.definitionByTypeAndValue as t then EvidenceVariableCharacteristicDefinitionByTypeAndValue(s,t);
  src.definitionByCombination as s -> tgt.definitionByCombination as t then EvidenceVariableCharacteristicDefinitionByCombination(s,t);
  src.instances : Quantity -> tgt.instances;
  src.instances : Range -> tgt.instances;
  src.duration : Quantity -> tgt.duration;
  src.duration : Range -> tgt.duration;
  src.timeFromEvent as s -> tgt.timeFromEvent as t then EvidenceVariableCharacteristicTimeFromEvent(s,t);
}

group EvidenceVariableCharacteristicDefinitionByTypeAndValue(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.method -> tgt.method;
  src.device -> tgt.device;
  src.value : CodeableConcept -> tgt.value;
  src.value : boolean -> tgt.value;
  src.value : Quantity -> tgt.value;
  src.value : Range -> tgt.value;
  src.value : Reference -> tgt.value;
  src.value : id -> tgt.value;
  src.offset -> tgt.offset;
}

group EvidenceVariableCharacteristicDefinitionByCombination(source src, target tgt) extends BackboneElement {
  src.code as v -> tgt.code = translate(v, '#CharacteristicCombination', 'code');
  src.threshold -> tgt.threshold;
}

group EvidenceVariableCharacteristicTimeFromEvent(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.note -> tgt.note;
  src.event : CodeableConcept -> tgt.event;
  src.event : Reference -> tgt.event;
  src.event : dateTime -> tgt.event;
  src.event : id -> tgt.event;
  src.quantity -> tgt.quantity;
  src.range -> tgt.range;
}

group EvidenceVariableCategory(source src, target tgt) extends BackboneElement {
  src.name -> tgt.name;
  src.value : CodeableConcept -> tgt.value;
  src.value : Quantity -> tgt.value;
  src.value : Range -> tgt.value;
}

