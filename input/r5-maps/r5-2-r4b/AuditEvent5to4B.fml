/// url = 'http://hl7.org/fhir/StructureMap/AuditEvent5to4B'
/// name = 'AuditEvent5to4B'
/// title = 'FML Conversion for AuditEvent: R5 to R4B'

conceptmap "AuditEventAction" {
  prefix s = "http://hl7.org/fhir/audit-event-action"
  prefix t = "http://hl7.org/fhir/4.3/audit-event-action"

  s:"C" - t:"C"
  s:"R" - t:"R"
  s:"U" - t:"U"
  s:"D" - t:"D"
  s:"E" - t:"E"
}

uses "http://hl7.org/fhir/StructureDefinition/AuditEvent" alias AuditEventR5 as source
uses "http://hl7.org/fhir/4.3/StructureDefinition/AuditEvent" alias AuditEventR4B as target

imports "http://hl7.org/fhir/StructureMap/*5to4B"

group AuditEvent(source src : AuditEventR5, target tgt : AuditEventR4B) extends DomainResource <<type+>> {
  src.category -> tgt.type;
  src.code -> tgt.subtype;
  src.action as v -> tgt.action = translate(v, '#AuditEventAction', 'code');
//  src.severity as v -> tgt.severity = translate(v, '#AuditEventSeverity', 'code');
//  src.occurred : Period -> tgt.occurred;
//  src.occurred : dateTime -> tgt.occurred;
  src.recorded -> tgt.recorded;
  src as s -> tgt.outcome as t then {
    s.outcome as s -> tgt.code as t1, t1.system = 'http://hl7.org/fhir/issue-severity', t1.code = s;
    s.outcomeDesc as s1 -> tgt.detail as t1, t1.text = s1;
  };
//  src.authorization -> tgt.authorization;
//  src.basedOn -> tgt.basedOn;
//  src.patient -> tgt.patient;
//  src.encounter -> tgt.encounter;
  src.agent as s -> tgt.agent as t then AuditEventAgent(s,t);
  src.source as s -> tgt.source as t then AuditEventSource(s,t);
  src.entity as s -> tgt.entity as t then AuditEventEntity(s,t);
}

group AuditEventAgent(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.role -> tgt.role;
  src.who -> tgt.who;
  src.requestor -> tgt.requestor;
  src.location -> tgt.location;
  src.policy -> tgt.policy;
  src.network : Reference -> tgt.network;
  src.network : uri -> tgt.network;
  src.network : string -> tgt.network;
  src.authorization -> tgt.authorization;
}

group AuditEventSource(source src, target tgt) extends BackboneElement {
  src.site -> tgt.site;
  src.observer -> tgt.observer;
  src.type -> tgt.type;
}

group AuditEventEntity(source src, target tgt) extends BackboneElement {
  src.what -> tgt.what;
  src.role -> tgt.role;
  src.securityLabel -> tgt.securityLabel;
  src.query -> tgt.query;
  src.detail as s -> tgt.detail as t then AuditEventEntityDetail(s,t);
}

group AuditEventEntityDetail(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.value : Quantity -> tgt.value;
  src.value : CodeableConcept -> tgt.value;
  src.value : string -> tgt.value;
  src.value : boolean -> tgt.value;
  src.value : integer -> tgt.value;
  src.value : Range -> tgt.value;
  src.value : Ratio -> tgt.value;
  src.value : time -> tgt.value;
  src.value : dateTime -> tgt.value;
  src.value : Period -> tgt.value;
  src.value : base64Binary -> tgt.value;
}

